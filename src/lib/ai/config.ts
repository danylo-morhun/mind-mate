export interface AIConfig {
  model: string;
  maxTokens: number;
  temperature: number;
  topP: number;
  defaultLanguage: string;
  supportedLanguages: string[];
  safetySettings: {
    harassment: string;
    hateSpeech: string;
    sexuallyExplicit: string;
    dangerousContent: string;
  };
}

export const AI_CONFIG: AIConfig = {
  model: process.env.GOOGLE_AI_MODEL || 'gemini-pro',
  maxTokens: parseInt(process.env.AI_MAX_TOKENS || '1000'),
  temperature: parseFloat(process.env.AI_TEMPERATURE || '0.7'),
  topP: parseFloat(process.env.AI_TOP_P || '0.9'),
  defaultLanguage: 'uk',
  supportedLanguages: ['uk', 'en', 'de'],
  safetySettings: {
    harassment: 'BLOCK_MEDIUM_AND_ABOVE',
    hateSpeech: 'BLOCK_MEDIUM_AND_ABOVE',
    sexuallyExplicit: 'BLOCK_MEDIUM_AND_ABOVE',
    dangerousContent: 'BLOCK_MEDIUM_AND_ABOVE'
  }
};

export const REPLY_TYPES = {
  ACADEMIC: 'academic',
  ADMINISTRATIVE: 'administrative',
  STUDENT_SUPPORT: 'student_support',
  COLLEAGUE: 'colleague',
  URGENT: 'urgent',
  CONFIRMATION: 'confirmation'
} as const;

export const REPLY_TONES = {
  PROFESSIONAL: 'professional',
  SUPPORTIVE: 'supportive',
  ENCOURAGING: 'encouraging',
  INSTRUCTIVE: 'instructive',
  COLLABORATIVE: 'collaborative'
} as const;

export const LANGUAGES = {
  UKRAINIAN: 'uk',
  ENGLISH: 'en',
  GERMAN: 'de'
} as const;

// –í–∞–ª—ñ–¥–∞—Ü—ñ—è –ø–∞—Ä–∞–º–µ—Ç—Ä—ñ–≤
export function validateReplyType(replyType: string): boolean {
  return Object.values(REPLY_TYPES).includes(replyType as any);
}

export function validateReplyTone(replyTone: string): boolean {
  return Object.values(REPLY_TONES).includes(replyTone as any);
}

export function validateLanguage(language: string): boolean {
  return Object.values(LANGUAGES).includes(language as any);
}

// –û—Ç—Ä–∏–º–∞–Ω–Ω—è –æ–ø–∏—Å—ñ–≤ –¥–ª—è UI
export function getReplyTypeLabel(replyType: string): string {
  const labels: Record<string, string> = {
    [REPLY_TYPES.ACADEMIC]: 'üéì –ê–∫–∞–¥–µ–º—ñ—á–Ω–∞',
    [REPLY_TYPES.ADMINISTRATIVE]: 'üìã –ê–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–∏–≤–Ω–∞',
    [REPLY_TYPES.STUDENT_SUPPORT]: 'üë®‚Äçüéì –ü—ñ–¥—Ç—Ä–∏–º–∫–∞ —Å—Ç—É–¥–µ–Ω—Ç—ñ–≤',
    [REPLY_TYPES.COLLEAGUE]: 'ü§ù –ö–æ–ª–µ–≥–∞–º',
    [REPLY_TYPES.URGENT]: '‚ö° –¢–µ—Ä–º—ñ–Ω–æ–≤–∞',
    [REPLY_TYPES.CONFIRMATION]: '‚úÖ –ü—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–Ω—è'
  };
  return labels[replyType] || replyType;
}

export function getReplyToneLabel(replyTone: string): string {
  const labels: Record<string, string> = {
    [REPLY_TONES.PROFESSIONAL]: 'üéØ –ü—Ä–æ—Ñ–µ—Å—ñ–π–Ω–∏–π',
    [REPLY_TONES.SUPPORTIVE]: 'üí™ –ü—ñ–¥—Ç—Ä–∏–º—É—é—á–∏–π',
    [REPLY_TONES.ENCOURAGING]: 'üåü –ó–∞–æ—Ö–æ—á—É–≤–∞–ª—å–Ω–∏–π',
    [REPLY_TONES.INSTRUCTIVE]: 'üìö –Ü–Ω—Å—Ç—Ä—É–∫—Ç–∏–≤–Ω–∏–π',
    [REPLY_TONES.COLLABORATIVE]: 'ü§ù –ö–æ–ª–∞–±–æ—Ä–∞—Ç–∏–≤–Ω–∏–π'
  };
  return labels[replyTone] || replyTone;
}

export function getLanguageLabel(language: string): string {
  const labels: Record<string, string> = {
    [LANGUAGES.UKRAINIAN]: 'üá∫üá¶ –£–∫—Ä–∞—ó–Ω—Å—å–∫–∞',
    [LANGUAGES.ENGLISH]: 'üá∫üá∏ English',
    [LANGUAGES.GERMAN]: 'üá©üá™ Deutsch'
  };
  return labels[language] || language;
}
